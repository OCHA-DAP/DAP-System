2013-12-24:  AdminResource has a mapping for .../cjtest which I intend to get a regionDictionary for the hardcoded values of the "CameroonTest" dictionary (in the db).
I have successfully gotten the entity by it's code and entity type, but struggling to get the RD using the RD.getRegionDictionaryByFields method I created in the RDDao.
The curatedDataService in AdminResource does not have a RDDao.  Think this might be the key. 

?? what does ctx stand for (xml file names):  ctx = context
?? why not use hibernate criteria rather than hql?  Criteria are more dynamic without need to tweak stirngs, but HQL queries are easier to read. 
?? Why have the rest.helper classes rather than just putting that in the DAO?  Is it to avoid creating another basic class alongside the others?  
?? Why not have a UID for RegionDictionary instead of the composite UID? A: Some people like to always have a technical ID (generated sequence or a unique field).  This is what we have done for the main model of the project (David's recommendation). In this case, NAME + IMPORTER makes a unique entry so this is used as a composite key. Otherwise, we would have to do something in the DB to enforce composite uniqueness (as was done in Indicator.java line 42). 

2013-12-25: Added RD.delete() method to RDDaoImpl which is called by CDSImpl which is called by AR (through the CDS Interface instead of the CDSImpl, 
which seems odd to me) to delete a hardcoded RD from the database.
Next: add a button to the jsp that calls this method, then have the button populate itself from the RDs listed on the page (or just one of them?), 
then add unique buttons for each RD in the table.

2013-12-25: Added button to cjtest.jsp which submits the table row data to AR which calls the delete method.  
However, the entity that is passed from the html table is a LONG, not an actual entity.
Next: trace how these entities get into the model to understand what they are and how to use them to retrieve the underlying Entity object.

2013-12-26: Solved the previous issue (simply needed to declare the form parameter entity as org.ocha.dap.persistence.entity.curateddata.Entity 
(full name needed to distinguish with the javax persistence Entity object).  However, this causes jersey-spring not to start and all pages return 404.
Trying without passing the entity.  Original line in AR.deleteRegionDictionary before this change:
	public Response deleteRegionDictionary (@FormParam("unnormalizedName") final String unnormalizedName, @FormParam("importer") final String importer, @FormParam("entity") final org.ocha.dap.persistence.entity.curateddata.Entity entity){

Actually, the entity wasn't needed at all.  Probably because of the composite key of unnormalizedName and importer.  
Delete buttons are working, but they submit to a subpath (/submitdelete) which then no longer has a post method for the addRegionDictionary form. 
Next: need to figure out how to have multiple post methods on a page, but have them return to the same page. 

-------------------------------------------------------------

?? The methods addRegionDictionary() and addEntity(), for example, don't throw any exception.  How are we handling data access exceptions?  Should we use the message library approach from hibernate (or is it spring?)?
?? The methods in SourceDictionaryDAOImpl and RegionDictionaryDAOImpl don't mirror each other.  Should they?  Should we abstract Dictionary as a Superclass?
?? The trailing slashes are present for some URL mappings and not for others.  Any reason?  For the newURI redirects, the trailing slashes were critical, but it seems not to be so not in the Spring (Jersey?) URL mappings. Compare AR.java lines 139 and 205.  What about for mappings that include variables, like line 172?
?? See the TODO on line 87 of RDDAOImplTest.  

2013-12-31:  Delete button implemented and pushed.  Finishing unit tests. 

Finished unit tests.  Next:  clean up cjtest.jsp and realated items in AR.java.  Check other edited files for any loose ends.

2014-01-01